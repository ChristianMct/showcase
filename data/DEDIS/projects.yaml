projects:

    - name:         Calypso
      description:  Encrypted storage with access control
      layman_desc: >
          Store data encrypted on the blockchain and use a decentralized access
          control mechanism to define who is allowed to decrypt.
      code:
          type: Lab GitHub
          url:  https://github.com/dedis/cothority/tree/master/calypso
      lines_of_code:    6500 / 1500
      contacts:
          - name:   Jeff Allen
            email:  jeff.allen@epfl.ch
      tags:
          - Blockchain
          - Private
          - Encryption
          - Access Control
      language: GoLang
      type: Application
      license:  AGPLv2
      maturity: 2
      added: 2019-03-18

    - name:         Kyber
      description:  Cryptographic library
      layman_desc: >
          A low level cryptographic library to create new cryptographic
          primitives. Not to be used for everyday cryptography.
      code:
          type: Lab GitHub
          url:  https://github.com/dedis/kyber
      lines_of_code:    17000 / 4000
      contacts:
          - name:   Jeff Allen
            email:  jeff.allen@epfl.ch
      tags:
          - Encryption
          - Low-Level
      language: GoLang
      type: Library
      license:  MPL 2.0
      maturity: 3
      added: 2019-03-18

    - name:         Personhood.online
      description:  Mobile frontend (iOS and Android) for personhood parties and interacting with ByzCoin
      code:
          type: Lab GitHub
          url:  https://github.com/dedis/personhood.online
      doc: https://pop.dedis.ch
      lines_of_code:    9000 / 2000
      contacts:
          - name:   Linus Gasser
            email:  linus.gasser@epfl.ch
      tags:
          - Mobile
          - iOS
          - Android
          - Personhood
          - ByzCoin
      language: Javascript
      type: Application
      license:  AGPLv2
      maturity: 2
      added: 2019-03-18

    - name:         OmniLedger
      description:  Ethereum-like blockchain implementation based on skipchains
      layman_desc: >
          OmniLedger is a high performance blockchain solution developed by the
          DEDIS-lab. It supports pre-compiled smart contracts, as well as
          Ethereum smart contracts. Combined with Calypso, it allows management
          of access to secure and private data in a fully audited way.
      code:
          type: Lab GitHub
          url:  http://github.com/dedis/cothority/tree/master/omniledger
      contacts:
          - name:   Kelong Cong
            email:  kelong.cong@epfl.ch
      tags:
          - Blockchain
          - Sharding
          - Performance
          - Proof-of-consensus
      language: GoLang
      type: Application, Library
      papers:
          - title:  'Enhancing Bitcoin performance'
            url:    https://www.usenix.org/system/files/conference/usenixsecurity16/sec16_paper_kokoris-kogias.pdf
          - title:  'OmniLedger - Scaling out Blockchains'
            url:    https://eprint.iacr.org/2017/406.pdf
          - title:  'Calypso - Auditable Sharing of Private Data over Blockchains'
            url:    https://eprint.iacr.org/2018/209.pdf
      license:  AGPLv3
      maturity: 2
      in_incubator: true
      c4dt_contact:
          name:  Linus Gasser
          email: linus.gasser@epfl.ch
      other_info:
          - type:  Blog post
            title: Bryan Ford - Skipchains
            url:   https://bford.info/2017/08/01/skipchain/
          - type:  Blog post
            title: Adrian Colyer - OmniLedger
            url:   https://blog.acolyer.org/2018/02/09/omniledger-a-secure-scale-out-decentralized-ledger-via-sharding/
      demo:
          title: OmniLedger access control
          url:   https://demo.c4dt.org/omniledger
          code:  https://github.com/c4dt/omniledger
      added: 2019-03-18

    - name:         Onet
      description:  Communication protocols
      layman_desc: >
          Library to write applications and protocols in a decentralized
          setting. Including an easy to use simulation framework to test the
          performance of the protocols.
      code:
          type: Lab GitHub
          url:  http://github.com/dedis/onet
      lines_of_code:    15000 / 3000
      contacts:
          - name:   Jeff Allen
            email:  jeff.allen@epfl.ch
      tags:
          - Low-Level
          - Network
          - Protocols
          - Simulator
      language: GoLang
      type: Library
      license:  AGPLv2
      maturity: 2
      added: 2019-03-18

    - name:         E-voting
      description:  E-voting using a blockchain
      layman_desc: >
          The e-voting used in the EPFL voting in summer 2018. It allows users
          to vote on a distributed system that will wait for the election to be
          over before decrypting the votes, keeping anonymity of the users.
      code:
          type: Lab GitHub
          url:  https://github.com/dedis/cothority/tree/master/evoting
      lines_of_code:    1700 / 200
      contacts:
          - name:   Jeff Allen
            email:  jeff.allen@epfl.ch
      tags:
          - E-Voting
          - Blockchain
          - Anonymous
          - Shuffle
      language: GoLang
      type: Application
      license:  AGPLv2
      maturity: 2
      added: 2019-03-18

    - name:         DRand
      description:  Publicly verifiable randomness
      layman_desc: >
          In many distributed applications, it is important to get a provably
          secure random number. DRand makes it possible to have these numbers
          provably secure.
      code:
          type: Lab GitHub
          url:  https://github.com/dedis/drand
      doc: https://pulsar.dedis.ch
      lines_of_code:    1000 / 200
      contacts:
          - name:   Nicolas Gailly
            email:  nicolas.gailly@epfl.ch
      tags:
          - Randomness
          - Decentralization
      language: GoLang
      type: Application
      license:  MIT
      maturity: 2
      added: 2019-03-18

    - name:         DEDIS / protobuf
      description:  Protobuf v2 implementation
      layman_desc: >
          Library for easy use of protobuf in golang without having to write
          .proto files first.
      code:
          type: Lab GitHub
          url:  https://github.com/dedis/protobuf
      lines_of_code:    2000 / 300
      tags:
          - Protobuf
          - GoLang
      language: GoLang
      type: Library
      license:  GPLv2
      maturity: 2
      added: 2019-03-18

    - name:         Crux
      description:  Locality-preserving publishing service
      layman_desc: >
          Decentralized publish/subscribe system (like RSS, or Apache Kafka)
          that improves time to serve for local data, without giving away
          consistency on a global level.
      code:
          type: Lab GitHub
          url:  https://github.com/dedis/paper_crux/tree/crux_service
      lines_of_code:    2100 / 700
      contacts:
          - name:   Cristina Basescu
            email:  cristina.basescu@epfl.ch
      tags:
          - Decentralization
          - Publish-Subscribe
          - Locality
      language: GoLang
      type: Application
      license:  AGPLv2
      maturity: 1
      added: 2019-03-18

    - name:         PeerDoc
      description:  Editing documents in a distributed way
      layman_desc: >
          Instead of storing your data on Google-drive, use a decentralized
          storage of your documents.
      code:
          type: Public GitHub
      contacts:
          - name:   Kirill Nikitin
            email:  kirill.nikitin@epfl.ch
      tags:
          - Decentralization
          - Document Editing
      language: GoLang
      type: Application
      maturity: 1
      added: 2019-03-18

    - name:         Purbs
      description:  Metadata leakage prevention for encrypted communication and storage
      layman_desc: >
          A library for a novel encoding approach preventing metadata leakage
          for encrypted communication and data at rest.
      code:
          type: Lab GitHub
          url:  http://github.com/dedis/purbs
      contacts:
          - name:   Kirill Nikitin
            email:  kirill.nikitin@epfl.ch
      tags:
          - Encryption
          - Data At Rest
          - Data In Transit
      type: Library
      maturity: 1
      added: 2019-03-18

    - name:         Slingshot
      description:  Scanning incoming emails for infected attachments
      url:          https://slingshot.dedis.ch/
      contacts:
          - name:     Stevens Le Blond
      tags:
          - Email
          - Protection
          - Attack
      type: Application
      maturity: 2
      added: 2019-03-18

    - name: Threshold Logical Clocks
      description: Solving the consensus problem in a new way by creating a global clock
      url: https://arxiv.org/abs/1907.07010
      code:
        type: Lab GitHub
        url: https://github.com/dedis/tlc
        latest: 2019-07-22
      contacts:
        - name: Bryan Ford
          email: bryan.ford@epfl.ch
      tags:
        - Byzantine Fault Tolerance
        - Consensus
        - Global clocks
      type:
        - Application
      maturity: 1
      added: 2019-07-26
