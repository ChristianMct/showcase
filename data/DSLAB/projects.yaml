projects:

    - name:         s2e
      description:  Platform for writing tools that analyze the properties and behavior of software systems
      layman_desc: >
          S²E is a platform for writing tools that analyze the properties and
          behavior of software systems. S²E comes as a modular library that
          gives virtual machines symbolic execution and program analysis
          capabilities.
      url:          http://s2e.systems/
      code:
          type: Project GitHub
          url:  https://github.com/s2e
      contacts:
          - name:   Vitaly Chipounov
            email:  vitaly@cyberheaven.io
      tags:
          - Code Analysis
          - Static Code Checking
          - Attack Vectors
      type: Library
      maturity: 1

    - name:         ASAP
      description:  Low overhead software protection
      layman_desc: >
          Makes it possible to use powerful software protection mechanisms at a
          low performance overhead.
      url:          http://dslab.epfl.ch/proj/asap/
      code:
          type: Lab GitHub
          url:  https://github.com/dslab-epfl/asap
      contact:      
      contacts:
          - name:   Jonas Wagner
            email:  ltlygwayh@gmail.com
      tags:
          - Software Protection
          - LLVM
          - Buffer Overflows
      type: Library
      maturity: 2

    - name:         Cloud 9
      description:  Scalable symbolic execution
      layman_desc: >
          Parallel symbolic execution engine that scales on shared-nothing
          clusters of commodity hardware.
      url:          http://cloud9.epfl.ch/
      code:
          type: Lab GitHub
          url:  https://github.com/dslab-epfl/cloud9
      contacts:
          - name:   Stefan Bucur
            email:  stefan.bucur@gmail.com
      tags:
          - Cloud
          - Performance
      type: Application
      maturity: 2

    - name:         Dimmunix
      description:  P{rotection against deadlock bugs
      layman_desc: >
          Enables general-purpose applications to defend themselves against
          deadlock bugs, i.e. avoid deadlocks that they previously encountered.
      url:          http://dslab.epfl.ch/proj/dimmunix/
      code:
          type: Google Code
          url:  https://code.google.com/archive/p/dimmunix/
      contacts:
          - name:   Horatiu Jula
            url:        https://www.linkedin.com/in/horatiu-jula-63a02a7
      tags:
          - Deadlock
          - Concurrency
          - Immunity
          - Java
      type: Library
      maturity: 2

    - name:         Failure Sketching
      description:  Automated debugging technique
      layman_desc: >
          Failure sketching is an automated debugging technique that provides
          developers with an explanation (“failure sketch”) of the root cause
          of a failure that occurred in production. A failure sketch only
          contains program statements that lead to the failure, and it clearly
          shows the differences between failing and successful runs; these
          differences guide developers to the root cause.
      url:          http://dslab.epfl.ch/proj/gist/
      code:
          type:     Lab GitHub
          url:      https://github.com/dslab-epfl/bugbase
      contacts:
          - name:   Baris Kasici
            email:  barisk@umich.edu
      tags:
          - Debug
          - Failure
          - Verification
      type: Application
      maturity: 3
